import mongoose, { Schema, SchemaDefinition } from 'mongoose';
import { House } from './house.model';

const houseSchema = new Schema({
    _id: { type: Schema.Types.String, required: true },
    name: { type: Schema.Types.String, required: true },
    summary: { type: Schema.Types.Date, required: true },
    space: { type: Schema.Types.String, required: false },
    description: { type: Schema.Types.String, required: false },
    neighborhood_overview: { type: Schema.Types.String, required: false },
    notes: { type: Schema.Types.String, required: false },
    transit: { type: Schema.Types.String, required: false },
    access: { type: Schema.Types.String, required: false },
    interaction: { type: Schema.Types.String, required: false },
    house_rules: { type: Schema.Types.String, required: false },
    property_type: { type: Schema.Types.String, required: false },
    room_type: { type: Schema.Types.String, required: false },
    bed_type: { type: Schema.Types.String, required: false },
    minimum_nights: { type: Schema.Types.String, required: false },
    maximum_nights: { type: Schema.Types.String, required: false },
    cancellation_policy: { type: Schema.Types.String, required: false },
    last_scraped: { type: Schema.Types.Date, required: false },
    calendar_last_scraped: { type: Schema.Types.Date, required: false },
    accommodates: { type: Schema.Types.Number, required: false },
    bedrooms: { type: Schema.Types.Number, required: true },
    beds: { type: Schema.Types.Number, required: true },
    bathrooms: { type: Schema.Types.Number, required: true },
    amenities: { type: [String], required: false },
    weekly_price: { type: Schema.Types.Number, required: false },
    monthly_price: { type: Schema.Types.Number, required: false },
    cleaning_fee: { type: Schema.Types.Number, required: false },
    extra_people: { type: Schema.Types.Number, required: false },
    guests_included: { type: Schema.Types.Number, required: false },
    images: { type: {
        thumbnail_url: { type: Schema.Types.String, required: false },
        medium_url: { type: Schema.Types.String, required: false },
        picture_url: { type: Schema.Types.String, required: true },
        xl_picture_url: { type: Schema.Types.String, required: false },
    }, required: true },
    host: { type: { 
        host_id: { type: Schema.Types.String, required: false },
        host_url: { type: Schema.Types.String, required: false },
        host_name: { type: Schema.Types.String, required: false },
        host_location: { type: Schema.Types.String, required: false },
        host_about: { type: Schema.Types.String, required: false },
        host_thumbnail_url: { type: Schema.Types.String, required: false },
        host_picture_url: { type: Schema.Types.String, required: false },
        host_neighbourhood: { type: Schema.Types.String, required: false },
        host_is_superhost: { type: Schema.Types.Boolean, required: false },
        host_has_profile_pic: { type: Schema.Types.Boolean, required: false },
        host_identity_verified: { type: Schema.Types.Boolean, required: false },
        host_listings_count: { type: Schema.Types.Number, required: false },
        host_total_listings_count: { type: Schema.Types.Number, required: false },
        host_verifications: { type: [String], required: false },
    }, required: false },    
    address: { type: { 
        street: { type: Schema.Types.String, required: true },
        suburb: { type: Schema.Types.String, required: false },
        government_area: { type: Schema.Types.String, required: false },
        market: { type: Schema.Types.String, required: true },
        country: { type: Schema.Types.String, required: true },
        country_code: { type: Schema.Types.String, required: true },
        location: { type: {
            type: { type: Schema.Types.String, required: false },
            coordinates: { type: [Number], required: false },
            is_location_exact: { type: Schema.Types.Boolean, required: false },
        }, required: false },
    }, required: true }, 
    availability: { type: { 
        availability_30: { type: Schema.Types.Number, required: false },
        availability_60: { type: Schema.Types.Number, required: false },
        availability_90: { type: Schema.Types.Number, required: false },
        availability_365: { type: Schema.Types.Number, required: false },
    }, required: false },    
    review_scores: { type: { 
        review_scores_accuracy: { type: Schema.Types.Number, required: false },
        review_scores_cleanliness: { type: Schema.Types.Number, required: false },
        review_scores_checkin: { type: Schema.Types.Number, required: false },
        review_scores_communication: { type: Schema.Types.Number, required: false },
        review_scores_location: { type: Schema.Types.Number, required: false },
        review_scores_value: { type: Schema.Types.Number, required: false },
        review_scores_rating: { type: Schema.Types.Number, required: false },
    }, required: false },    
    reviews: { type: [{
        _id: { type: Schema.Types.String, required: true },
        date: { type: Schema.Types.Date, required: true },
        listing_id: { type: Schema.Types.String, required: false },
        reviewer_id: { type: Schema.Types.String, required: false },
        reviewer_name: { type: Schema.Types.String, required: true },
        comments: { type: Schema.Types.String, required: true },
    }], required: false },
} as SchemaDefinition<House>);

export const houseContext = mongoose.model<House>('listingsAndReviews', houseSchema);
